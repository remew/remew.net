import Head from 'next/head';
// import { PrismaClient } from '@prisma/client';
// import { GetServerSideProps } from 'next';
import { ReactNode } from 'react';

// type Props = {};
const Home = (): ReactNode => {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>ok</main>
    </div>
  );
};
export default Home;

// function serializeDateToString<T extends object>(obj: T): { [K in keyof T]: T[K] extends Date ? string : T[K] } {
//   return Object.fromEntries(
//     Object.entries(obj).map(([key, value]) => {
//       if (value instanceof Date) {
//         return [key, value.toISOString()];
//       }
//       return [key, value];
//     }),
//   ) as any;
// }

// export const getServerSideProps: GetServerSideProps = async () => {
//   const prisma = new PrismaClient();
//   const article = await prisma.article.findFirst();
//   const articles = await prisma.article.findMany({ where: { published: false } });
//   console.log(articles);
//
//   if (!article) {
//     const createdArticle = await prisma.article.create({
//       data: {
//         content: '# first article',
//         syntax: 'MARKDOWN',
//         title: 'first article',
//       },
//     });
//
//     return {
//       props: {
//         article: serializeDateToString(createdArticle),
//         articles: articles.map(serializeDateToString),
//       },
//     };
//   }
//
//   return {
//     props: {
//       article: serializeDateToString(article),
//       articles: articles.map(serializeDateToString),
//     },
//   };
// };
